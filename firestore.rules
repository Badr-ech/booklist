rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to read and write their own books subcollection
      match /books/{bookId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Allow users to read and write their own wishlist subcollection
      match /wishlist/{bookId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Allow authenticated users to read all user profiles for discovery
    match /users/{userId} {
      allow read: if request.auth != null;
    }

    // Follow relationships - authenticated users can read and manage follows
    match /follows/{followId} {
      allow read, write: if request.auth != null;
    }

    // Book popularity tracking - authenticated users can read and update
    match /bookPopularity/{bookId} {
      allow read, write: if request.auth != null;
    }

    // User achievements - users can read all achievements and write their own
    match /userAchievements/{achievementId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // User progress - users can read all progress and write their own
    match /userProgress/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Reading goals - users can read all goals and write their own
    match /readingGoals/{goalId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && goalId.matches('.*' + request.auth.uid + '.*');
    }

    // Forums - authenticated users can read all forums and create new ones
    match /forums/{forumId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }

    // Forum posts - authenticated users can read all posts and manage their own
    match /forumPosts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }

    // Book clubs - authenticated users can read all clubs and manage their own
    match /bookClubs/{clubId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }

    // Reading challenges - authenticated users can read all challenges and manage their own
    match /readingChallenges/{challengeId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }

    // Review votes - authenticated users can read all votes and manage their own
    match /reviewVotes/{voteId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && voteId.matches('.*' + request.auth.uid + '.*');
    }

    // Review comments - authenticated users can read all comments and manage their own
    match /reviewComments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Review reports - authenticated users can read and create reports
    match /reviewReports/{reportId} {
      allow read, write: if request.auth != null;
    }

    // Book notes - users can read all notes and manage their own
    match /bookNotes/{noteId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // User activity tracking - users can read all activities and write their own
    match /userActivities/{activityId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Custom lists - users can read all lists and manage their own
    match /customLists/{listId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
